// -*-C++-*-
// This file is a part of the IncludeOS unikernel - www.includeos.org
//
// Copyright 2015 Oslo and Akershus University College of Applied Sciences
// and Alfred Bratterud
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once
#ifndef API_TERMINAL_HEADER
#define API_TERMINAL_HEADER

#include <delegate>
#include <string>
#include <vector>
class Terminal;

struct TerminalProgram
{
  using main_func = delegate<int(Terminal&, const std::vector<std::string>&)>;

  TerminalProgram(const std::string& descr, main_func func)
    : desc(descr), main(func) {}

  std::string desc;
  main_func   main;
};

/**
 *  Register a terminal program globally that will be present on all (future)
 *  terminals created after registering the command.
 *  Registering the same program name twice will overwrite existing.
 *
 *  see: Terminal::register_program(std::string name, TerminalProgram)
**/

#include "kernel/terminal.hpp"

#endif
